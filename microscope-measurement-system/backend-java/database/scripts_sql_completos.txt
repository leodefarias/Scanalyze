=================================================================================
SISTEMA DE MICROMEDIÇÃO AUTOMATIZADA
SCRIPTS SQL COMPLETOS PARA ORACLE DATABASE
=================================================================================

INSTRUÇÕES DE USO:
1. Conecte-se ao Oracle Database com as credenciais:
   - URL: jdbc:oracle:thin:@oracle.fiap.com.br:1521:orcl
   - USER: RM555211
   - PASSWORD: 281005

2. Execute os scripts na ordem apresentada:
   - Primeiro: SCRIPT 1 (Criação do Schema)
   - Segundo: SCRIPT 2 (Carga Inicial de Dados)

3. Verifique a execução com as consultas de validação ao final.

=================================================================================
SCRIPT 1: CRIAÇÃO DO SCHEMA ORACLE (oracle_schema.sql)
=================================================================================

-- =============================================================================
-- SISTEMA DE MICROMEDIÇÃO AUTOMATIZADA
-- Script de Criação do Schema Oracle Database
--
-- Autor: Sistema de Micromedição
-- Versão: 1.0
-- Data: 2025
-- =============================================================================

-- Verificar se as tabelas existem e dropar se necessário
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_MEASUREMENTS CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_MICROSCOPY_IMAGES CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_SAMPLES CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_DIGITAL_MICROSCOPES CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_OPERATORS CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- Dropar sequences se existirem
BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_OPERATORS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_DIGITAL_MICROSCOPES';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_SAMPLES';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_MICROSCOPY_IMAGES';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_MEASUREMENTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- =============================================================================
-- CRIAÇÃO DAS SEQUENCES
-- =============================================================================

CREATE SEQUENCE SQ_OPERATORS
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

CREATE SEQUENCE SQ_DIGITAL_MICROSCOPES
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

CREATE SEQUENCE SQ_SAMPLES
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

CREATE SEQUENCE SQ_MICROSCOPY_IMAGES
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

CREATE SEQUENCE SQ_MEASUREMENTS
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

-- =============================================================================
-- TABELA DE OPERADORES
-- =============================================================================

CREATE TABLE TB_OPERATORS (
    ID NUMBER NOT NULL,
    OPERATOR_ID VARCHAR2(50) NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(150) NOT NULL,
    NIVEL_ACESSO VARCHAR2(20) NOT NULL,
    DATA_CRIACAO DATE DEFAULT SYSDATE,
    ATIVO CHAR(1) DEFAULT 'S',

    CONSTRAINT PK_OPERATORS PRIMARY KEY (ID),
    CONSTRAINT UK_OPERATORS_OPERATOR_ID UNIQUE (OPERATOR_ID),
    CONSTRAINT UK_OPERATORS_EMAIL UNIQUE (EMAIL),
    CONSTRAINT CK_OPERATORS_NIVEL_ACESSO CHECK (NIVEL_ACESSO IN ('ADMIN', 'TECNICO', 'OPERADOR')),
    CONSTRAINT CK_OPERATORS_ATIVO CHECK (ATIVO IN ('S', 'N'))
);

-- Comentários da tabela TB_OPERATORS
COMMENT ON TABLE TB_OPERATORS IS 'Tabela de operadores do sistema de micromedição';
COMMENT ON COLUMN TB_OPERATORS.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_OPERATORS.OPERATOR_ID IS 'Identificador único do operador';
COMMENT ON COLUMN TB_OPERATORS.NOME IS 'Nome completo do operador';
COMMENT ON COLUMN TB_OPERATORS.EMAIL IS 'Email do operador (único)';
COMMENT ON COLUMN TB_OPERATORS.NIVEL_ACESSO IS 'Nível de acesso: ADMIN, TECNICO, OPERADOR';
COMMENT ON COLUMN TB_OPERATORS.DATA_CRIACAO IS 'Data de criação do registro';
COMMENT ON COLUMN TB_OPERATORS.ATIVO IS 'Indica se o operador está ativo (S/N)';

-- =============================================================================
-- TABELA DE MICROSCÓPIOS DIGITAIS
-- =============================================================================

CREATE TABLE TB_DIGITAL_MICROSCOPES (
    ID NUMBER NOT NULL,
    MICROSCOPE_ID VARCHAR2(50) NOT NULL,
    MODELO VARCHAR2(100) NOT NULL,
    FABRICANTE VARCHAR2(100) NOT NULL,
    NUMERO_SERIE VARCHAR2(100),
    MAGNIFICACAO_MAXIMA NUMBER(10,2),
    ESCALA_PIXELS_UM NUMBER(10,4) DEFAULT 10.0,
    RESOLUCAO_MAXIMA VARCHAR2(20),
    DATA_AQUISICAO DATE,
    STATUS VARCHAR2(20) DEFAULT 'ATIVO',
    OBSERVACOES VARCHAR2(500),
    DATA_CRIACAO DATE DEFAULT SYSDATE,

    CONSTRAINT PK_DIGITAL_MICROSCOPES PRIMARY KEY (ID),
    CONSTRAINT UK_DIGITAL_MICROSCOPES_ID UNIQUE (MICROSCOPE_ID),
    CONSTRAINT UK_DIGITAL_MICROSCOPES_SERIE UNIQUE (NUMERO_SERIE),
    CONSTRAINT CK_DIGITAL_MICROSCOPES_STATUS CHECK (STATUS IN ('ATIVO', 'INATIVO', 'MANUTENCAO'))
);

-- Comentários da tabela TB_DIGITAL_MICROSCOPES
COMMENT ON TABLE TB_DIGITAL_MICROSCOPES IS 'Tabela de microscópios digitais';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.MICROSCOPE_ID IS 'Identificador único do microscópio';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.MODELO IS 'Modelo do microscópio';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.FABRICANTE IS 'Fabricante do microscópio';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.NUMERO_SERIE IS 'Número de série do equipamento';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.MAGNIFICACAO_MAXIMA IS 'Magnificação máxima do microscópio';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.ESCALA_PIXELS_UM IS 'Escala de conversão pixels por micrômetro';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.RESOLUCAO_MAXIMA IS 'Resolução máxima (ex: 1920x1080)';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.DATA_AQUISICAO IS 'Data de aquisição do equipamento';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.STATUS IS 'Status do equipamento';

-- =============================================================================
-- TABELA DE AMOSTRAS
-- =============================================================================

CREATE TABLE TB_SAMPLES (
    ID NUMBER NOT NULL,
    SAMPLE_ID VARCHAR2(50) NOT NULL,
    NOME VARCHAR2(200) NOT NULL,
    TIPO VARCHAR2(100) NOT NULL,
    DATA_COLETA DATE NOT NULL,
    OPERADOR_RESPONSAVEL VARCHAR2(100) NOT NULL,
    DESCRICAO VARCHAR2(1000),
    PACIENTE_ID VARCHAR2(50),
    LOCALIZACAO_ANATOMICA VARCHAR2(200),
    METODO_PREPARACAO VARCHAR2(200),
    DATA_CRIACAO DATE DEFAULT SYSDATE,
    STATUS VARCHAR2(20) DEFAULT 'ATIVA',

    CONSTRAINT PK_SAMPLES PRIMARY KEY (ID),
    CONSTRAINT UK_SAMPLES_SAMPLE_ID UNIQUE (SAMPLE_ID),
    CONSTRAINT CK_SAMPLES_STATUS CHECK (STATUS IN ('ATIVA', 'PROCESSADA', 'ARQUIVADA'))
);

-- Comentários da tabela TB_SAMPLES
COMMENT ON TABLE TB_SAMPLES IS 'Tabela de amostras para análise microscópica';
COMMENT ON COLUMN TB_SAMPLES.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_SAMPLES.SAMPLE_ID IS 'Identificador único da amostra';
COMMENT ON COLUMN TB_SAMPLES.NOME IS 'Nome descritivo da amostra';
COMMENT ON COLUMN TB_SAMPLES.TIPO IS 'Tipo da amostra (sangue, tecido, etc.)';
COMMENT ON COLUMN TB_SAMPLES.DATA_COLETA IS 'Data e hora da coleta';
COMMENT ON COLUMN TB_SAMPLES.OPERADOR_RESPONSAVEL IS 'Operador responsável pela coleta';
COMMENT ON COLUMN TB_SAMPLES.DESCRICAO IS 'Descrição detalhada da amostra';
COMMENT ON COLUMN TB_SAMPLES.PACIENTE_ID IS 'Identificador do paciente';
COMMENT ON COLUMN TB_SAMPLES.LOCALIZACAO_ANATOMICA IS 'Localização anatômica da coleta';
COMMENT ON COLUMN TB_SAMPLES.METODO_PREPARACAO IS 'Método de preparação da amostra';

-- =============================================================================
-- TABELA DE IMAGENS MICROSCÓPICAS
-- =============================================================================

CREATE TABLE TB_MICROSCOPY_IMAGES (
    ID NUMBER NOT NULL,
    IMAGE_ID VARCHAR2(50) NOT NULL,
    SAMPLE_ID_FK NUMBER NOT NULL,
    MICROSCOPE_ID_FK NUMBER NOT NULL,
    ARQUIVO VARCHAR2(500) NOT NULL,
    FORMATO VARCHAR2(10) DEFAULT 'JPG',
    TAMANHO_BYTES NUMBER,
    RESOLUCAO VARCHAR2(20),
    MAGNIFICACAO NUMBER(10,2),
    DATA_CAPTURA DATE NOT NULL,
    OPERADOR_CAPTURA VARCHAR2(100),
    OBSERVACOES VARCHAR2(1000),
    DATA_CRIACAO DATE DEFAULT SYSDATE,

    CONSTRAINT PK_MICROSCOPY_IMAGES PRIMARY KEY (ID),
    CONSTRAINT UK_MICROSCOPY_IMAGES_ID UNIQUE (IMAGE_ID),
    CONSTRAINT FK_MICROSCOPY_IMAGES_SAMPLE FOREIGN KEY (SAMPLE_ID_FK) REFERENCES TB_SAMPLES(ID),
    CONSTRAINT FK_MICROSCOPY_IMAGES_MICROSCOPE FOREIGN KEY (MICROSCOPE_ID_FK) REFERENCES TB_DIGITAL_MICROSCOPES(ID),
    CONSTRAINT CK_MICROSCOPY_IMAGES_FORMATO CHECK (FORMATO IN ('JPG', 'PNG', 'TIFF', 'BMP'))
);

-- Comentários da tabela TB_MICROSCOPY_IMAGES
COMMENT ON TABLE TB_MICROSCOPY_IMAGES IS 'Tabela de imagens microscópicas';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.IMAGE_ID IS 'Identificador único da imagem';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.SAMPLE_ID_FK IS 'Chave estrangeira para amostra';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.MICROSCOPE_ID_FK IS 'Chave estrangeira para microscópio';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.ARQUIVO IS 'Caminho do arquivo de imagem';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.FORMATO IS 'Formato da imagem';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.TAMANHO_BYTES IS 'Tamanho do arquivo em bytes';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.RESOLUCAO IS 'Resolução da imagem';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.MAGNIFICACAO IS 'Magnificação utilizada na captura';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.DATA_CAPTURA IS 'Data e hora da captura';

-- =============================================================================
-- TABELA DE MEDIÇÕES
-- =============================================================================

CREATE TABLE TB_MEASUREMENTS (
    ID NUMBER NOT NULL,
    MEASUREMENT_ID VARCHAR2(50) NOT NULL,
    SAMPLE_ID_FK NUMBER NOT NULL,
    IMAGE_ID_FK NUMBER NOT NULL,
    MICROSCOPE_ID_FK NUMBER NOT NULL,
    OPERATOR_ID_FK NUMBER NOT NULL,
    AREA_PIXELS NUMBER NOT NULL,
    AREA_MICROMETERS NUMBER(15,6) NOT NULL,
    SCALE_PIXELS_PER_UM NUMBER(10,4) NOT NULL,
    DATA_MEDICAO DATE NOT NULL,
    METODO_PROCESSAMENTO VARCHAR2(100),
    PARAMETROS_PROCESSAMENTO VARCHAR2(1000),
    OBSERVACOES VARCHAR2(1000),
    VALIDADA CHAR(1) DEFAULT 'N',
    DATA_VALIDACAO DATE,
    OPERADOR_VALIDACAO VARCHAR2(100),
    DATA_CRIACAO DATE DEFAULT SYSDATE,

    CONSTRAINT PK_MEASUREMENTS PRIMARY KEY (ID),
    CONSTRAINT UK_MEASUREMENTS_ID UNIQUE (MEASUREMENT_ID),
    CONSTRAINT FK_MEASUREMENTS_SAMPLE FOREIGN KEY (SAMPLE_ID_FK) REFERENCES TB_SAMPLES(ID),
    CONSTRAINT FK_MEASUREMENTS_IMAGE FOREIGN KEY (IMAGE_ID_FK) REFERENCES TB_MICROSCOPY_IMAGES(ID),
    CONSTRAINT FK_MEASUREMENTS_MICROSCOPE FOREIGN KEY (MICROSCOPE_ID_FK) REFERENCES TB_DIGITAL_MICROSCOPES(ID),
    CONSTRAINT FK_MEASUREMENTS_OPERATOR FOREIGN KEY (OPERATOR_ID_FK) REFERENCES TB_OPERATORS(ID),
    CONSTRAINT CK_MEASUREMENTS_AREA_PIXELS CHECK (AREA_PIXELS > 0),
    CONSTRAINT CK_MEASUREMENTS_AREA_UM CHECK (AREA_MICROMETERS > 0),
    CONSTRAINT CK_MEASUREMENTS_SCALE CHECK (SCALE_PIXELS_PER_UM > 0),
    CONSTRAINT CK_MEASUREMENTS_VALIDADA CHECK (VALIDADA IN ('S', 'N'))
);

-- Comentários da tabela TB_MEASUREMENTS
COMMENT ON TABLE TB_MEASUREMENTS IS 'Tabela de medições realizadas';
COMMENT ON COLUMN TB_MEASUREMENTS.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_MEASUREMENTS.MEASUREMENT_ID IS 'Identificador único da medição';
COMMENT ON COLUMN TB_MEASUREMENTS.SAMPLE_ID_FK IS 'Chave estrangeira para amostra';
COMMENT ON COLUMN TB_MEASUREMENTS.IMAGE_ID_FK IS 'Chave estrangeira para imagem';
COMMENT ON COLUMN TB_MEASUREMENTS.MICROSCOPE_ID_FK IS 'Chave estrangeira para microscópio';
COMMENT ON COLUMN TB_MEASUREMENTS.OPERATOR_ID_FK IS 'Chave estrangeira para operador';
COMMENT ON COLUMN TB_MEASUREMENTS.AREA_PIXELS IS 'Área calculada em pixels';
COMMENT ON COLUMN TB_MEASUREMENTS.AREA_MICROMETERS IS 'Área calculada em micrômetros quadrados';
COMMENT ON COLUMN TB_MEASUREMENTS.SCALE_PIXELS_PER_UM IS 'Escala de conversão utilizada';
COMMENT ON COLUMN TB_MEASUREMENTS.DATA_MEDICAO IS 'Data e hora da medição';
COMMENT ON COLUMN TB_MEASUREMENTS.METODO_PROCESSAMENTO IS 'Método de processamento utilizado';
COMMENT ON COLUMN TB_MEASUREMENTS.PARAMETROS_PROCESSAMENTO IS 'Parâmetros de processamento (JSON)';
COMMENT ON COLUMN TB_MEASUREMENTS.VALIDADA IS 'Indica se a medição foi validada (S/N)';

-- =============================================================================
-- CRIAÇÃO DE ÍNDICES PARA PERFORMANCE
-- =============================================================================

-- Índices para TB_OPERATORS
CREATE INDEX IDX_OPERATORS_EMAIL ON TB_OPERATORS(EMAIL);
CREATE INDEX IDX_OPERATORS_NIVEL_ACESSO ON TB_OPERATORS(NIVEL_ACESSO);
CREATE INDEX IDX_OPERATORS_ATIVO ON TB_OPERATORS(ATIVO);

-- Índices para TB_DIGITAL_MICROSCOPES
CREATE INDEX IDX_MICROSCOPES_STATUS ON TB_DIGITAL_MICROSCOPES(STATUS);
CREATE INDEX IDX_MICROSCOPES_FABRICANTE ON TB_DIGITAL_MICROSCOPES(FABRICANTE);

-- Índices para TB_SAMPLES
CREATE INDEX IDX_SAMPLES_TIPO ON TB_SAMPLES(TIPO);
CREATE INDEX IDX_SAMPLES_DATA_COLETA ON TB_SAMPLES(DATA_COLETA);
CREATE INDEX IDX_SAMPLES_STATUS ON TB_SAMPLES(STATUS);
CREATE INDEX IDX_SAMPLES_OPERADOR_RESP ON TB_SAMPLES(OPERADOR_RESPONSAVEL);

-- Índices para TB_MICROSCOPY_IMAGES
CREATE INDEX IDX_IMAGES_DATA_CAPTURA ON TB_MICROSCOPY_IMAGES(DATA_CAPTURA);
CREATE INDEX IDX_IMAGES_FORMATO ON TB_MICROSCOPY_IMAGES(FORMATO);

-- Índices para TB_MEASUREMENTS
CREATE INDEX IDX_MEASUREMENTS_DATA_MEDICAO ON TB_MEASUREMENTS(DATA_MEDICAO);
CREATE INDEX IDX_MEASUREMENTS_VALIDADA ON TB_MEASUREMENTS(VALIDADA);
CREATE INDEX IDX_MEASUREMENTS_AREA_UM ON TB_MEASUREMENTS(AREA_MICROMETERS);

-- =============================================================================
-- GRANTS E PRIVILÉGIOS
-- =============================================================================

-- Conceder privilégios nas sequences
GRANT SELECT ON SQ_OPERATORS TO PUBLIC;
GRANT SELECT ON SQ_DIGITAL_MICROSCOPES TO PUBLIC;
GRANT SELECT ON SQ_SAMPLES TO PUBLIC;
GRANT SELECT ON SQ_MICROSCOPY_IMAGES TO PUBLIC;
GRANT SELECT ON SQ_MEASUREMENTS TO PUBLIC;

-- =============================================================================
-- MENSAGEM DE SUCESSO
-- =============================================================================

SELECT 'Schema do Sistema de Micromedição criado com sucesso!' as STATUS FROM DUAL;
SELECT 'Tabelas criadas: ' || COUNT(*) as TABELAS_CRIADAS
FROM USER_TABLES
WHERE TABLE_NAME IN ('TB_OPERATORS', 'TB_DIGITAL_MICROSCOPES', 'TB_SAMPLES', 'TB_MICROSCOPY_IMAGES', 'TB_MEASUREMENTS');

SELECT 'Sequences criadas: ' || COUNT(*) as SEQUENCES_CRIADAS
FROM USER_SEQUENCES
WHERE SEQUENCE_NAME IN ('SQ_OPERATORS', 'SQ_DIGITAL_MICROSCOPES', 'SQ_SAMPLES', 'SQ_MICROSCOPY_IMAGES', 'SQ_MEASUREMENTS');

=================================================================================
SCRIPT 2: CARGA INICIAL DE DADOS (initial_data.sql)
=================================================================================

-- =============================================================================
-- SISTEMA DE MICROMEDIÇÃO AUTOMATIZADA
-- Script de Carga Inicial de Dados
--
-- Autor: Sistema de Micromedição
-- Versão: 1.0
-- Data: 2025
-- =============================================================================

-- Limpar dados existentes (se houver)
DELETE FROM TB_MEASUREMENTS;
DELETE FROM TB_MICROSCOPY_IMAGES;
DELETE FROM TB_SAMPLES;
DELETE FROM TB_DIGITAL_MICROSCOPES;
DELETE FROM TB_OPERATORS;

-- Reset das sequences
ALTER SEQUENCE SQ_OPERATORS RESTART START WITH 1;
ALTER SEQUENCE SQ_DIGITAL_MICROSCOPES RESTART START WITH 1;
ALTER SEQUENCE SQ_SAMPLES RESTART START WITH 1;
ALTER SEQUENCE SQ_MICROSCOPY_IMAGES RESTART START WITH 1;
ALTER SEQUENCE SQ_MEASUREMENTS RESTART START WITH 1;

-- =============================================================================
-- CARGA DE DADOS - OPERADORES
-- =============================================================================

INSERT INTO TB_OPERATORS (ID, OPERATOR_ID, NOME, EMAIL, NIVEL_ACESSO, DATA_CRIACAO, ATIVO)
VALUES (SQ_OPERATORS.NEXTVAL, 'OP001', 'Dr. João Silva', 'joao.silva@hospital.com.br', 'ADMIN', SYSDATE, 'S');

INSERT INTO TB_OPERATORS (ID, OPERATOR_ID, NOME, EMAIL, NIVEL_ACESSO, DATA_CRIACAO, ATIVO)
VALUES (SQ_OPERATORS.NEXTVAL, 'OP002', 'Maria Santos', 'maria.santos@hospital.com.br', 'TECNICO', SYSDATE, 'S');

INSERT INTO TB_OPERATORS (ID, OPERATOR_ID, NOME, EMAIL, NIVEL_ACESSO, DATA_CRIACAO, ATIVO)
VALUES (SQ_OPERATORS.NEXTVAL, 'OP003', 'Carlos Oliveira', 'carlos.oliveira@hospital.com.br', 'OPERADOR', SYSDATE, 'S');

INSERT INTO TB_OPERATORS (ID, OPERATOR_ID, NOME, EMAIL, NIVEL_ACESSO, DATA_CRIACAO, ATIVO)
VALUES (SQ_OPERATORS.NEXTVAL, 'OP004', 'Ana Costa', 'ana.costa@hospital.com.br', 'TECNICO', SYSDATE, 'S');

INSERT INTO TB_OPERATORS (ID, OPERATOR_ID, NOME, EMAIL, NIVEL_ACESSO, DATA_CRIACAO, ATIVO)
VALUES (SQ_OPERATORS.NEXTVAL, 'OP005', 'Pedro Almeida', 'pedro.almeida@hospital.com.br', 'OPERADOR', SYSDATE, 'S');

-- =============================================================================
-- CARGA DE DADOS - MICROSCÓPIOS DIGITAIS
-- =============================================================================

INSERT INTO TB_DIGITAL_MICROSCOPES (
    ID, MICROSCOPE_ID, MODELO, FABRICANTE, NUMERO_SERIE,
    MAGNIFICACAO_MAXIMA, ESCALA_PIXELS_UM, RESOLUCAO_MAXIMA,
    DATA_AQUISICAO, STATUS, OBSERVACOES, DATA_CRIACAO
) VALUES (
    SQ_DIGITAL_MICROSCOPES.NEXTVAL, 'MICRO001', 'DM6000B', 'Leica', 'LM001234567',
    1000.0, 10.0, '1920x1080', DATE '2023-01-15', 'ATIVO',
    'Microscópio principal do laboratório de patologia', SYSDATE
);

INSERT INTO TB_DIGITAL_MICROSCOPES (
    ID, MICROSCOPE_ID, MODELO, FABRICANTE, NUMERO_SERIE,
    MAGNIFICACAO_MAXIMA, ESCALA_PIXELS_UM, RESOLUCAO_MAXIMA,
    DATA_AQUISICAO, STATUS, OBSERVACOES, DATA_CRIACAO
) VALUES (
    SQ_DIGITAL_MICROSCOPES.NEXTVAL, 'MICRO002', 'BX53', 'Olympus', 'OL987654321',
    400.0, 8.5, '1280x960', DATE '2023-06-20', 'ATIVO',
    'Microscópio secundário para análises rápidas', SYSDATE
);

INSERT INTO TB_DIGITAL_MICROSCOPES (
    ID, MICROSCOPE_ID, MODELO, FABRICANTE, NUMERO_SERIE,
    MAGNIFICACAO_MAXIMA, ESCALA_PIXELS_UM, RESOLUCAO_MAXIMA,
    DATA_AQUISICAO, STATUS, OBSERVACOES, DATA_CRIACAO
) VALUES (
    SQ_DIGITAL_MICROSCOPES.NEXTVAL, 'MICRO003', 'Axio Imager', 'Zeiss', 'ZE555888999',
    1500.0, 12.0, '2048x1536', DATE '2022-11-10', 'MANUTENCAO',
    'Em manutenção preventiva - previsão de retorno em 1 semana', SYSDATE
);

-- =============================================================================
-- CARGA DE DADOS - AMOSTRAS
-- =============================================================================

INSERT INTO TB_SAMPLES (
    ID, SAMPLE_ID, NOME, TIPO, DATA_COLETA, OPERADOR_RESPONSAVEL,
    DESCRICAO, PACIENTE_ID, LOCALIZACAO_ANATOMICA, METODO_PREPARACAO,
    DATA_CRIACAO, STATUS
) VALUES (
    SQ_SAMPLES.NEXTVAL, 'SAMPLE_001', 'Sangue Paciente A', 'Sangue',
    TO_DATE('2024-01-15 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'Dr. João Silva',
    'Amostra de sangue coletada para análise de eritrócitos',
    'PAC001', 'Veia antecubital', 'Esfregaço em lâmina com coloração Giemsa',
    SYSDATE, 'ATIVA'
);

INSERT INTO TB_SAMPLES (
    ID, SAMPLE_ID, NOME, TIPO, DATA_COLETA, OPERADOR_RESPONSAVEL,
    DESCRICAO, PACIENTE_ID, LOCALIZACAO_ANATOMICA, METODO_PREPARACAO,
    DATA_CRIACAO, STATUS
) VALUES (
    SQ_SAMPLES.NEXTVAL, 'SAMPLE_002', 'Tecido Muscular', 'Tecido',
    TO_DATE('2024-01-15 09:30:00', 'YYYY-MM-DD HH24:MI:SS'), 'Maria Santos',
    'Biópsia de tecido muscular para análise histopatológica',
    'PAC002', 'Músculo deltóide', 'Fixação em formalina e corte histológico',
    SYSDATE, 'ATIVA'
);

INSERT INTO TB_SAMPLES (
    ID, SAMPLE_ID, NOME, TIPO, DATA_COLETA, OPERADOR_RESPONSAVEL,
    DESCRICAO, PACIENTE_ID, LOCALIZACAO_ANATOMICA, METODO_PREPARACAO,
    DATA_CRIACAO, STATUS
) VALUES (
    SQ_SAMPLES.NEXTVAL, 'SAMPLE_003', 'Célula Neural', 'Neurônio',
    TO_DATE('2024-01-15 15:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'Carlos Oliveira',
    'Cultura de neurônios para estudo de morfologia celular',
    'PAC003', 'Córtex cerebral', 'Cultura celular em meio DMEM',
    SYSDATE, 'ATIVA'
);

INSERT INTO TB_SAMPLES (
    ID, SAMPLE_ID, NOME, TIPO, DATA_COLETA, OPERADOR_RESPONSAVEL,
    DESCRICAO, PACIENTE_ID, LOCALIZACAO_ANATOMICA, METODO_PREPARACAO,
    DATA_CRIACAO, STATUS
) VALUES (
    SQ_SAMPLES.NEXTVAL, 'SAMPLE_004', 'Tecido Hepático', 'Tecido',
    TO_DATE('2024-01-16 10:15:00', 'YYYY-MM-DD HH24:MI:SS'), 'Ana Costa',
    'Biópsia hepática para análise de hepatócitos',
    'PAC004', 'Lóbulo hepático', 'Fixação e processamento histológico padrão',
    SYSDATE, 'PROCESSADA'
);

INSERT INTO TB_SAMPLES (
    ID, SAMPLE_ID, NOME, TIPO, DATA_COLETA, OPERADOR_RESPONSAVEL,
    DESCRICAO, PACIENTE_ID, LOCALIZACAO_ANATOMICA, METODO_PREPARACAO,
    DATA_CRIACAO, STATUS
) VALUES (
    SQ_SAMPLES.NEXTVAL, 'SAMPLE_005', 'Células Epiteliais', 'Epitélio',
    TO_DATE('2024-01-16 14:20:00', 'YYYY-MM-DD HH24:MI:SS'), 'Pedro Almeida',
    'Raspado de mucosa bucal para análise citológica',
    'PAC005', 'Mucosa bucal', 'Raspado e fixação em álcool 70%',
    SYSDATE, 'ATIVA'
);

-- =============================================================================
-- CARGA DE DADOS - IMAGENS MICROSCÓPICAS
-- =============================================================================

INSERT INTO TB_MICROSCOPY_IMAGES (
    ID, IMAGE_ID, SAMPLE_ID_FK, MICROSCOPE_ID_FK, ARQUIVO,
    FORMATO, TAMANHO_BYTES, RESOLUCAO, MAGNIFICACAO,
    DATA_CAPTURA, OPERADOR_CAPTURA, OBSERVACOES, DATA_CRIACAO
) VALUES (
    SQ_MICROSCOPY_IMAGES.NEXTVAL, 'IMG_1749780022', 1, 1, 'IMG_1749780022.jpg',
    'JPG', 2048576, '1920x1080', 400.0,
    TO_DATE('2024-01-15 10:30:22', 'YYYY-MM-DD HH24:MI:SS'), 'Dr. João Silva',
    'Imagem de eritrócitos com boa definição', SYSDATE
);

INSERT INTO TB_MICROSCOPY_IMAGES (
    ID, IMAGE_ID, SAMPLE_ID_FK, MICROSCOPE_ID_FK, ARQUIVO,
    FORMATO, TAMANHO_BYTES, RESOLUCAO, MAGNIFICACAO,
    DATA_CAPTURA, OPERADOR_CAPTURA, OBSERVACOES, DATA_CRIACAO
) VALUES (
    SQ_MICROSCOPY_IMAGES.NEXTVAL, 'IMG_1749950847', 2, 1, 'IMG_1749950847.jpg',
    'JPG', 3145728, '1920x1080', 200.0,
    TO_DATE('2024-01-15 11:45:00', 'YYYY-MM-DD HH24:MI:SS'), 'Maria Santos',
    'Tecido muscular com fibras bem preservadas', SYSDATE
);

INSERT INTO TB_MICROSCOPY_IMAGES (
    ID, IMAGE_ID, SAMPLE_ID_FK, MICROSCOPE_ID_FK, ARQUIVO,
    FORMATO, TAMANHO_BYTES, RESOLUCAO, MAGNIFICACAO,
    DATA_CAPTURA, OPERADOR_CAPTURA, OBSERVACOES, DATA_CRIACAO
) VALUES (
    SQ_MICROSCOPY_IMAGES.NEXTVAL, 'IMG_1749951001', 3, 2, 'IMG_1749951001.jpg',
    'JPG', 1572864, '1280x960', 600.0,
    TO_DATE('2024-01-15 16:10:00', 'YYYY-MM-DD HH24:MI:SS'), 'Carlos Oliveira',
    'Neurônios com dendritos visíveis', SYSDATE
);

INSERT INTO TB_MICROSCOPY_IMAGES (
    ID, IMAGE_ID, SAMPLE_ID_FK, MICROSCOPE_ID_FK, ARQUIVO,
    FORMATO, TAMANHO_BYTES, RESOLUCAO, MAGNIFICACAO,
    DATA_CAPTURA, OPERADOR_CAPTURA, OBSERVACOES, DATA_CRIACAO
) VALUES (
    SQ_MICROSCOPY_IMAGES.NEXTVAL, 'IMG_1749951695', 4, 1, 'IMG_1749951695.jpg',
    'JPG', 2621440, '1920x1080', 400.0,
    TO_DATE('2024-01-16 11:20:00', 'YYYY-MM-DD HH24:MI:SS'), 'Ana Costa',
    'Hepatócitos com núcleo central bem definido', SYSDATE
);

INSERT INTO TB_MICROSCOPY_IMAGES (
    ID, IMAGE_ID, SAMPLE_ID_FK, MICROSCOPE_ID_FK, ARQUIVO,
    FORMATO, TAMANHO_BYTES, RESOLUCAO, MAGNIFICACAO,
    DATA_CAPTURA, OPERADOR_CAPTURA, OBSERVACOES, DATA_CRIACAO
) VALUES (
    SQ_MICROSCOPY_IMAGES.NEXTVAL, 'IMG_1749951957', 5, 2, 'IMG_1749951957.jpg',
    'JPG', 1310720, '1280x960', 200.0,
    TO_DATE('2024-01-16 15:30:00', 'YYYY-MM-DD HH24:MI:SS'), 'Pedro Almeida',
    'Células epiteliais descamativas', SYSDATE
);

-- =============================================================================
-- CARGA DE DADOS - MEDIÇÕES
-- =============================================================================

INSERT INTO TB_MEASUREMENTS (
    ID, MEASUREMENT_ID, SAMPLE_ID_FK, IMAGE_ID_FK, MICROSCOPE_ID_FK, OPERATOR_ID_FK,
    AREA_PIXELS, AREA_MICROMETERS, SCALE_PIXELS_PER_UM, DATA_MEDICAO,
    METODO_PROCESSAMENTO, PARAMETROS_PROCESSAMENTO, OBSERVACOES,
    VALIDADA, DATA_VALIDACAO, OPERADOR_VALIDACAO, DATA_CRIACAO
) VALUES (
    SQ_MEASUREMENTS.NEXTVAL, 'MEAS_1749780022', 1, 1, 1, 1,
    23929, 239.29, 10.0, TO_DATE('2024-01-15 10:30:22', 'YYYY-MM-DD HH24:MI:SS'),
    'OpenCV Threshold + Contour Detection',
    '{"threshold": 120, "blur_kernel": 5, "min_area": 500}',
    'Medição automática de eritrócitos', 'S',
    TO_DATE('2024-01-15 11:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'Dr. João Silva', SYSDATE
);

INSERT INTO TB_MEASUREMENTS (
    ID, MEASUREMENT_ID, SAMPLE_ID_FK, IMAGE_ID_FK, MICROSCOPE_ID_FK, OPERATOR_ID_FK,
    AREA_PIXELS, AREA_MICROMETERS, SCALE_PIXELS_PER_UM, DATA_MEDICAO,
    METODO_PROCESSAMENTO, PARAMETROS_PROCESSAMENTO, OBSERVACOES,
    VALIDADA, DATA_VALIDACAO, OPERADOR_VALIDACAO, DATA_CRIACAO
) VALUES (
    SQ_MEASUREMENTS.NEXTVAL, 'MEAS_1749950847', 2, 2, 1, 2,
    301661, 3016.61, 10.0, TO_DATE('2024-01-15 11:45:00', 'YYYY-MM-DD HH24:MI:SS'),
    'OpenCV Threshold + Contour Detection',
    '{"threshold": 115, "blur_kernel": 5, "min_area": 800}',
    'Área total de fibras musculares', 'S',
    TO_DATE('2024-01-15 12:15:00', 'YYYY-MM-DD HH24:MI:SS'), 'Maria Santos', SYSDATE
);

INSERT INTO TB_MEASUREMENTS (
    ID, MEASUREMENT_ID, SAMPLE_ID_FK, IMAGE_ID_FK, MICROSCOPE_ID_FK, OPERATOR_ID_FK,
    AREA_PIXELS, AREA_MICROMETERS, SCALE_PIXELS_PER_UM, DATA_MEDICAO,
    METODO_PROCESSAMENTO, PARAMETROS_PROCESSAMENTO, OBSERVACOES,
    VALIDADA, DATA_VALIDACAO, OPERADOR_VALIDACAO, DATA_CRIACAO
) VALUES (
    SQ_MEASUREMENTS.NEXTVAL, 'MEAS_1749951001', 3, 3, 2, 3,
    302050, 3020.50, 8.5, TO_DATE('2024-01-15 16:10:00', 'YYYY-MM-DD HH24:MI:SS'),
    'OpenCV Threshold + Contour Detection',
    '{"threshold": 125, "blur_kernel": 3, "min_area": 300}',
    'Soma neuronal principal', 'N', NULL, NULL, SYSDATE
);

INSERT INTO TB_MEASUREMENTS (
    ID, MEASUREMENT_ID, SAMPLE_ID_FK, IMAGE_ID_FK, MICROSCOPE_ID_FK, OPERATOR_ID_FK,
    AREA_PIXELS, AREA_MICROMETERS, SCALE_PIXELS_PER_UM, DATA_MEDICAO,
    METODO_PROCESSAMENTO, PARAMETROS_PROCESSAMENTO, OBSERVACOES,
    VALIDADA, DATA_VALIDACAO, OPERADOR_VALIDACAO, DATA_CRIACAO
) VALUES (
    SQ_MEASUREMENTS.NEXTVAL, 'MEAS_1749951695', 4, 4, 1, 4,
    312138, 3121.38, 10.0, TO_DATE('2024-01-16 11:20:00', 'YYYY-MM-DD HH24:MI:SS'),
    'OpenCV Threshold + Contour Detection',
    '{"threshold": 110, "blur_kernel": 5, "min_area": 600}',
    'Área de hepatócitos funcionais', 'S',
    TO_DATE('2024-01-16 12:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'Ana Costa', SYSDATE
);

INSERT INTO TB_MEASUREMENTS (
    ID, MEASUREMENT_ID, SAMPLE_ID_FK, IMAGE_ID_FK, MICROSCOPE_ID_FK, OPERATOR_ID_FK,
    AREA_PIXELS, AREA_MICROMETERS, SCALE_PIXELS_PER_UM, DATA_MEDICAO,
    METODO_PROCESSAMENTO, PARAMETROS_PROCESSAMENTO, OBSERVACOES,
    VALIDADA, DATA_VALIDACAO, OPERADOR_VALIDACAO, DATA_CRIACAO
) VALUES (
    SQ_MEASUREMENTS.NEXTVAL, 'MEAS_1749951957', 5, 5, 2, 5,
    289764, 2897.64, 8.5, TO_DATE('2024-01-16 15:30:00', 'YYYY-MM-DD HH24:MI:SS'),
    'OpenCV Threshold + Contour Detection',
    '{"threshold": 130, "blur_kernel": 5, "min_area": 400}',
    'Células epiteliais descamativas', 'N', NULL, NULL, SYSDATE
);

-- =============================================================================
-- COMMITS E VERIFICAÇÕES
-- =============================================================================

-- Confirma todas as inserções
COMMIT;

-- Verificação dos dados inseridos
SELECT 'OPERADORES: ' || COUNT(*) as TOTAL FROM TB_OPERATORS;
SELECT 'MICROSCÓPIOS: ' || COUNT(*) as TOTAL FROM TB_DIGITAL_MICROSCOPES;
SELECT 'AMOSTRAS: ' || COUNT(*) as TOTAL FROM TB_SAMPLES;
SELECT 'IMAGENS: ' || COUNT(*) as TOTAL FROM TB_MICROSCOPY_IMAGES;
SELECT 'MEDIÇÕES: ' || COUNT(*) as TOTAL FROM TB_MEASUREMENTS;

-- Estatísticas gerais
SELECT
    'DADOS CARREGADOS COM SUCESSO!' as STATUS,
    (SELECT COUNT(*) FROM TB_OPERATORS) as OPERADORES,
    (SELECT COUNT(*) FROM TB_DIGITAL_MICROSCOPES) as MICROSCOPIOS,
    (SELECT COUNT(*) FROM TB_SAMPLES) as AMOSTRAS,
    (SELECT COUNT(*) FROM TB_MICROSCOPY_IMAGES) as IMAGENS,
    (SELECT COUNT(*) FROM TB_MEASUREMENTS) as MEDICOES
FROM DUAL;

-- Verificação de integridade referencial
SELECT
    'VERIFICAÇÃO DE INTEGRIDADE' as TESTE,
    CASE
        WHEN EXISTS (
            SELECT 1 FROM TB_MEASUREMENTS m
            WHERE m.SAMPLE_ID_FK NOT IN (SELECT s.ID FROM TB_SAMPLES s)
        ) THEN 'FALHA'
        ELSE 'OK'
    END as SAMPLE_FK,
    CASE
        WHEN EXISTS (
            SELECT 1 FROM TB_MEASUREMENTS m
            WHERE m.IMAGE_ID_FK NOT IN (SELECT i.ID FROM TB_MICROSCOPY_IMAGES i)
        ) THEN 'FALHA'
        ELSE 'OK'
    END as IMAGE_FK,
    CASE
        WHEN EXISTS (
            SELECT 1 FROM TB_MEASUREMENTS m
            WHERE m.MICROSCOPE_ID_FK NOT IN (SELECT d.ID FROM TB_DIGITAL_MICROSCOPES d)
        ) THEN 'FALHA'
        ELSE 'OK'
    END as MICROSCOPE_FK,
    CASE
        WHEN EXISTS (
            SELECT 1 FROM TB_MEASUREMENTS m
            WHERE m.OPERATOR_ID_FK NOT IN (SELECT o.ID FROM TB_OPERATORS o)
        ) THEN 'FALHA'
        ELSE 'OK'
    END as OPERATOR_FK
FROM DUAL;

-- Exemplos de consultas úteis
SELECT 'CONSULTA: Medições por operador' as EXEMPLO FROM DUAL;
SELECT
    o.NOME as OPERADOR,
    o.NIVEL_ACESSO,
    COUNT(m.ID) as TOTAL_MEDICOES,
    ROUND(AVG(m.AREA_MICROMETERS), 2) as AREA_MEDIA_UM
FROM TB_OPERATORS o
LEFT JOIN TB_MEASUREMENTS m ON o.ID = m.OPERATOR_ID_FK
GROUP BY o.NOME, o.NIVEL_ACESSO
ORDER BY TOTAL_MEDICOES DESC;

SELECT 'CONSULTA: Medições por tipo de amostra' as EXEMPLO FROM DUAL;
SELECT
    s.TIPO as TIPO_AMOSTRA,
    COUNT(m.ID) as TOTAL_MEDICOES,
    ROUND(AVG(m.AREA_MICROMETERS), 2) as AREA_MEDIA_UM,
    ROUND(MIN(m.AREA_MICROMETERS), 2) as AREA_MINIMA_UM,
    ROUND(MAX(m.AREA_MICROMETERS), 2) as AREA_MAXIMA_UM
FROM TB_SAMPLES s
LEFT JOIN TB_MEASUREMENTS m ON s.ID = m.SAMPLE_ID_FK
GROUP BY s.TIPO
ORDER BY TOTAL_MEDICOES DESC;

=================================================================================
CONSULTAS DE VALIDAÇÃO E TESTES
=================================================================================

-- 1. Verificar se todas as tabelas foram criadas
SELECT TABLE_NAME, NUM_ROWS, TABLESPACE_NAME
FROM USER_TABLES
WHERE TABLE_NAME LIKE 'TB_%'
ORDER BY TABLE_NAME;

-- 2. Verificar sequences criadas
SELECT SEQUENCE_NAME, LAST_NUMBER, INCREMENT_BY
FROM USER_SEQUENCES
WHERE SEQUENCE_NAME LIKE 'SQ_%'
ORDER BY SEQUENCE_NAME;

-- 3. Verificar constraints
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME, STATUS
FROM USER_CONSTRAINTS
WHERE TABLE_NAME LIKE 'TB_%'
ORDER BY TABLE_NAME, CONSTRAINT_TYPE;

-- 4. Verificar dados inseridos por tabela
SELECT 'TB_OPERATORS' as TABELA, COUNT(*) as REGISTROS FROM TB_OPERATORS
UNION ALL
SELECT 'TB_DIGITAL_MICROSCOPES', COUNT(*) FROM TB_DIGITAL_MICROSCOPES
UNION ALL
SELECT 'TB_SAMPLES', COUNT(*) FROM TB_SAMPLES
UNION ALL
SELECT 'TB_MICROSCOPY_IMAGES', COUNT(*) FROM TB_MICROSCOPY_IMAGES
UNION ALL
SELECT 'TB_MEASUREMENTS', COUNT(*) FROM TB_MEASUREMENTS
ORDER BY TABELA;

-- 5. Verificar relacionamentos (JOIN entre tabelas)
SELECT
    m.MEASUREMENT_ID,
    s.SAMPLE_ID,
    s.NOME as AMOSTRA,
    o.NOME as OPERADOR,
    dm.MODELO as MICROSCOPIO,
    m.AREA_MICROMETERS as AREA_UM2
FROM TB_MEASUREMENTS m
JOIN TB_SAMPLES s ON m.SAMPLE_ID_FK = s.ID
JOIN TB_OPERATORS o ON m.OPERATOR_ID_FK = o.ID
JOIN TB_DIGITAL_MICROSCOPES dm ON m.MICROSCOPE_ID_FK = dm.ID
ORDER BY m.DATA_MEDICAO DESC;

-- 6. Estatísticas avançadas
SELECT
    'ESTATÍSTICAS DO SISTEMA' as TITULO,
    (SELECT COUNT(*) FROM TB_OPERATORS WHERE ATIVO = 'S') as OPERADORES_ATIVOS,
    (SELECT COUNT(*) FROM TB_DIGITAL_MICROSCOPES WHERE STATUS = 'ATIVO') as MICROSCOPIOS_ATIVOS,
    (SELECT COUNT(*) FROM TB_SAMPLES WHERE STATUS = 'ATIVA') as AMOSTRAS_ATIVAS,
    (SELECT COUNT(*) FROM TB_MEASUREMENTS WHERE VALIDADA = 'S') as MEDICOES_VALIDADAS,
    (SELECT ROUND(AVG(AREA_MICROMETERS), 2) FROM TB_MEASUREMENTS) as AREA_MEDIA_UM2
FROM DUAL;

-- 7. Teste de performance dos índices
SELECT INDEX_NAME, TABLE_NAME, COLUMN_NAME, COLUMN_POSITION
FROM USER_IND_COLUMNS
WHERE TABLE_NAME LIKE 'TB_%'
ORDER BY TABLE_NAME, INDEX_NAME, COLUMN_POSITION;

=================================================================================
FIM DOS SCRIPTS SQL
=================================================================================

RESUMO:
✅ Script 1: Criação completa do schema (5 tabelas + sequences + índices)
✅ Script 2: Carga inicial com 23 registros em relacionamento completo
✅ Consultas de validação para verificar integridade
✅ Estatísticas e relatórios do sistema

PRÓXIMOS PASSOS:
1. Execute o Script 1 para criar as estruturas
2. Execute o Script 2 para carregar os dados iniciais
3. Execute as consultas de validação para verificar
4. Sistema pronto para uso com a aplicação Java

STATUS: ✅ SCRIPTS COMPLETOS E PRONTOS PARA EXECUÇÃO