-- =============================================================================
-- SISTEMA DE MICROMEDIÇÃO AUTOMATIZADA
-- Script de Criação do Schema Oracle Database
--
-- Autor: Sistema de Micromedição
-- Versão: 1.0
-- Data: 2025
-- =============================================================================

-- Verificar se as tabelas existem e dropar se necessário
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_MEASUREMENTS CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_MICROSCOPY_IMAGES CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_SAMPLES CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_DIGITAL_MICROSCOPES CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TB_OPERATORS CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- Dropar sequences se existirem
BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_OPERATORS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_DIGITAL_MICROSCOPES';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_SAMPLES';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_MICROSCOPY_IMAGES';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SQ_MEASUREMENTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- =============================================================================
-- CRIAÇÃO DAS SEQUENCES
-- =============================================================================

CREATE SEQUENCE SQ_OPERATORS
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

CREATE SEQUENCE SQ_DIGITAL_MICROSCOPES
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

CREATE SEQUENCE SQ_SAMPLES
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

CREATE SEQUENCE SQ_MICROSCOPY_IMAGES
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

CREATE SEQUENCE SQ_MEASUREMENTS
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 10;

-- =============================================================================
-- TABELA DE OPERADORES
-- =============================================================================

CREATE TABLE TB_OPERATORS (
    ID NUMBER NOT NULL,
    OPERATOR_ID VARCHAR2(50) NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(150) NOT NULL,
    NIVEL_ACESSO VARCHAR2(20) NOT NULL,
    DATA_CRIACAO DATE DEFAULT SYSDATE,
    ATIVO CHAR(1) DEFAULT 'S',

    CONSTRAINT PK_OPERATORS PRIMARY KEY (ID),
    CONSTRAINT UK_OPERATORS_OPERATOR_ID UNIQUE (OPERATOR_ID),
    CONSTRAINT UK_OPERATORS_EMAIL UNIQUE (EMAIL),
    CONSTRAINT CK_OPERATORS_NIVEL_ACESSO CHECK (NIVEL_ACESSO IN ('ADMIN', 'TECNICO', 'OPERADOR')),
    CONSTRAINT CK_OPERATORS_ATIVO CHECK (ATIVO IN ('S', 'N'))
);

-- Comentários da tabela TB_OPERATORS
COMMENT ON TABLE TB_OPERATORS IS 'Tabela de operadores do sistema de micromedição';
COMMENT ON COLUMN TB_OPERATORS.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_OPERATORS.OPERATOR_ID IS 'Identificador único do operador';
COMMENT ON COLUMN TB_OPERATORS.NOME IS 'Nome completo do operador';
COMMENT ON COLUMN TB_OPERATORS.EMAIL IS 'Email do operador (único)';
COMMENT ON COLUMN TB_OPERATORS.NIVEL_ACESSO IS 'Nível de acesso: ADMIN, TECNICO, OPERADOR';
COMMENT ON COLUMN TB_OPERATORS.DATA_CRIACAO IS 'Data de criação do registro';
COMMENT ON COLUMN TB_OPERATORS.ATIVO IS 'Indica se o operador está ativo (S/N)';

-- =============================================================================
-- TABELA DE MICROSCÓPIOS DIGITAIS
-- =============================================================================

CREATE TABLE TB_DIGITAL_MICROSCOPES (
    ID NUMBER NOT NULL,
    MICROSCOPE_ID VARCHAR2(50) NOT NULL,
    MODELO VARCHAR2(100) NOT NULL,
    FABRICANTE VARCHAR2(100) NOT NULL,
    NUMERO_SERIE VARCHAR2(100),
    MAGNIFICACAO_MAXIMA NUMBER(10,2),
    ESCALA_PIXELS_UM NUMBER(10,4) DEFAULT 10.0,
    RESOLUCAO_MAXIMA VARCHAR2(20),
    DATA_AQUISICAO DATE,
    STATUS VARCHAR2(20) DEFAULT 'ATIVO',
    OBSERVACOES VARCHAR2(500),
    DATA_CRIACAO DATE DEFAULT SYSDATE,

    CONSTRAINT PK_DIGITAL_MICROSCOPES PRIMARY KEY (ID),
    CONSTRAINT UK_DIGITAL_MICROSCOPES_ID UNIQUE (MICROSCOPE_ID),
    CONSTRAINT UK_DIGITAL_MICROSCOPES_SERIE UNIQUE (NUMERO_SERIE),
    CONSTRAINT CK_DIGITAL_MICROSCOPES_STATUS CHECK (STATUS IN ('ATIVO', 'INATIVO', 'MANUTENCAO'))
);

-- Comentários da tabela TB_DIGITAL_MICROSCOPES
COMMENT ON TABLE TB_DIGITAL_MICROSCOPES IS 'Tabela de microscópios digitais';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.MICROSCOPE_ID IS 'Identificador único do microscópio';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.MODELO IS 'Modelo do microscópio';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.FABRICANTE IS 'Fabricante do microscópio';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.NUMERO_SERIE IS 'Número de série do equipamento';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.MAGNIFICACAO_MAXIMA IS 'Magnificação máxima do microscópio';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.ESCALA_PIXELS_UM IS 'Escala de conversão pixels por micrômetro';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.RESOLUCAO_MAXIMA IS 'Resolução máxima (ex: 1920x1080)';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.DATA_AQUISICAO IS 'Data de aquisição do equipamento';
COMMENT ON COLUMN TB_DIGITAL_MICROSCOPES.STATUS IS 'Status do equipamento';

-- =============================================================================
-- TABELA DE AMOSTRAS
-- =============================================================================

CREATE TABLE TB_SAMPLES (
    ID NUMBER NOT NULL,
    SAMPLE_ID VARCHAR2(50) NOT NULL,
    NOME VARCHAR2(200) NOT NULL,
    TIPO VARCHAR2(100) NOT NULL,
    DATA_COLETA DATE NOT NULL,
    OPERADOR_RESPONSAVEL VARCHAR2(100) NOT NULL,
    DESCRICAO VARCHAR2(1000),
    PACIENTE_ID VARCHAR2(50),
    LOCALIZACAO_ANATOMICA VARCHAR2(200),
    METODO_PREPARACAO VARCHAR2(200),
    DATA_CRIACAO DATE DEFAULT SYSDATE,
    STATUS VARCHAR2(20) DEFAULT 'ATIVA',

    CONSTRAINT PK_SAMPLES PRIMARY KEY (ID),
    CONSTRAINT UK_SAMPLES_SAMPLE_ID UNIQUE (SAMPLE_ID),
    CONSTRAINT CK_SAMPLES_STATUS CHECK (STATUS IN ('ATIVA', 'PROCESSADA', 'ARQUIVADA'))
);

-- Comentários da tabela TB_SAMPLES
COMMENT ON TABLE TB_SAMPLES IS 'Tabela de amostras para análise microscópica';
COMMENT ON COLUMN TB_SAMPLES.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_SAMPLES.SAMPLE_ID IS 'Identificador único da amostra';
COMMENT ON COLUMN TB_SAMPLES.NOME IS 'Nome descritivo da amostra';
COMMENT ON COLUMN TB_SAMPLES.TIPO IS 'Tipo da amostra (sangue, tecido, etc.)';
COMMENT ON COLUMN TB_SAMPLES.DATA_COLETA IS 'Data e hora da coleta';
COMMENT ON COLUMN TB_SAMPLES.OPERADOR_RESPONSAVEL IS 'Operador responsável pela coleta';
COMMENT ON COLUMN TB_SAMPLES.DESCRICAO IS 'Descrição detalhada da amostra';
COMMENT ON COLUMN TB_SAMPLES.PACIENTE_ID IS 'Identificador do paciente';
COMMENT ON COLUMN TB_SAMPLES.LOCALIZACAO_ANATOMICA IS 'Localização anatômica da coleta';
COMMENT ON COLUMN TB_SAMPLES.METODO_PREPARACAO IS 'Método de preparação da amostra';

-- =============================================================================
-- TABELA DE IMAGENS MICROSCÓPICAS
-- =============================================================================

CREATE TABLE TB_MICROSCOPY_IMAGES (
    ID NUMBER NOT NULL,
    IMAGE_ID VARCHAR2(50) NOT NULL,
    SAMPLE_ID_FK NUMBER NOT NULL,
    MICROSCOPE_ID_FK NUMBER NOT NULL,
    ARQUIVO VARCHAR2(500) NOT NULL,
    FORMATO VARCHAR2(10) DEFAULT 'JPG',
    TAMANHO_BYTES NUMBER,
    RESOLUCAO VARCHAR2(20),
    MAGNIFICACAO NUMBER(10,2),
    DATA_CAPTURA DATE NOT NULL,
    OPERADOR_CAPTURA VARCHAR2(100),
    OBSERVACOES VARCHAR2(1000),
    DATA_CRIACAO DATE DEFAULT SYSDATE,

    CONSTRAINT PK_MICROSCOPY_IMAGES PRIMARY KEY (ID),
    CONSTRAINT UK_MICROSCOPY_IMAGES_ID UNIQUE (IMAGE_ID),
    CONSTRAINT FK_MICROSCOPY_IMAGES_SAMPLE FOREIGN KEY (SAMPLE_ID_FK) REFERENCES TB_SAMPLES(ID),
    CONSTRAINT FK_MICROSCOPY_IMAGES_MICROSCOPE FOREIGN KEY (MICROSCOPE_ID_FK) REFERENCES TB_DIGITAL_MICROSCOPES(ID),
    CONSTRAINT CK_MICROSCOPY_IMAGES_FORMATO CHECK (FORMATO IN ('JPG', 'PNG', 'TIFF', 'BMP'))
);

-- Comentários da tabela TB_MICROSCOPY_IMAGES
COMMENT ON TABLE TB_MICROSCOPY_IMAGES IS 'Tabela de imagens microscópicas';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.IMAGE_ID IS 'Identificador único da imagem';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.SAMPLE_ID_FK IS 'Chave estrangeira para amostra';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.MICROSCOPE_ID_FK IS 'Chave estrangeira para microscópio';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.ARQUIVO IS 'Caminho do arquivo de imagem';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.FORMATO IS 'Formato da imagem';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.TAMANHO_BYTES IS 'Tamanho do arquivo em bytes';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.RESOLUCAO IS 'Resolução da imagem';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.MAGNIFICACAO IS 'Magnificação utilizada na captura';
COMMENT ON COLUMN TB_MICROSCOPY_IMAGES.DATA_CAPTURA IS 'Data e hora da captura';

-- =============================================================================
-- TABELA DE MEDIÇÕES
-- =============================================================================

CREATE TABLE TB_MEASUREMENTS (
    ID NUMBER NOT NULL,
    MEASUREMENT_ID VARCHAR2(50) NOT NULL,
    SAMPLE_ID_FK NUMBER NOT NULL,
    IMAGE_ID_FK NUMBER NOT NULL,
    MICROSCOPE_ID_FK NUMBER NOT NULL,
    OPERATOR_ID_FK NUMBER NOT NULL,
    AREA_PIXELS NUMBER NOT NULL,
    AREA_MICROMETERS NUMBER(15,6) NOT NULL,
    SCALE_PIXELS_PER_UM NUMBER(10,4) NOT NULL,
    DATA_MEDICAO DATE NOT NULL,
    METODO_PROCESSAMENTO VARCHAR2(100),
    PARAMETROS_PROCESSAMENTO VARCHAR2(1000),
    OBSERVACOES VARCHAR2(1000),
    VALIDADA CHAR(1) DEFAULT 'N',
    DATA_VALIDACAO DATE,
    OPERADOR_VALIDACAO VARCHAR2(100),
    DATA_CRIACAO DATE DEFAULT SYSDATE,

    CONSTRAINT PK_MEASUREMENTS PRIMARY KEY (ID),
    CONSTRAINT UK_MEASUREMENTS_ID UNIQUE (MEASUREMENT_ID),
    CONSTRAINT FK_MEASUREMENTS_SAMPLE FOREIGN KEY (SAMPLE_ID_FK) REFERENCES TB_SAMPLES(ID),
    CONSTRAINT FK_MEASUREMENTS_IMAGE FOREIGN KEY (IMAGE_ID_FK) REFERENCES TB_MICROSCOPY_IMAGES(ID),
    CONSTRAINT FK_MEASUREMENTS_MICROSCOPE FOREIGN KEY (MICROSCOPE_ID_FK) REFERENCES TB_DIGITAL_MICROSCOPES(ID),
    CONSTRAINT FK_MEASUREMENTS_OPERATOR FOREIGN KEY (OPERATOR_ID_FK) REFERENCES TB_OPERATORS(ID),
    CONSTRAINT CK_MEASUREMENTS_AREA_PIXELS CHECK (AREA_PIXELS > 0),
    CONSTRAINT CK_MEASUREMENTS_AREA_UM CHECK (AREA_MICROMETERS > 0),
    CONSTRAINT CK_MEASUREMENTS_SCALE CHECK (SCALE_PIXELS_PER_UM > 0),
    CONSTRAINT CK_MEASUREMENTS_VALIDADA CHECK (VALIDADA IN ('S', 'N'))
);

-- Comentários da tabela TB_MEASUREMENTS
COMMENT ON TABLE TB_MEASUREMENTS IS 'Tabela de medições realizadas';
COMMENT ON COLUMN TB_MEASUREMENTS.ID IS 'Chave primária numérica';
COMMENT ON COLUMN TB_MEASUREMENTS.MEASUREMENT_ID IS 'Identificador único da medição';
COMMENT ON COLUMN TB_MEASUREMENTS.SAMPLE_ID_FK IS 'Chave estrangeira para amostra';
COMMENT ON COLUMN TB_MEASUREMENTS.IMAGE_ID_FK IS 'Chave estrangeira para imagem';
COMMENT ON COLUMN TB_MEASUREMENTS.MICROSCOPE_ID_FK IS 'Chave estrangeira para microscópio';
COMMENT ON COLUMN TB_MEASUREMENTS.OPERATOR_ID_FK IS 'Chave estrangeira para operador';
COMMENT ON COLUMN TB_MEASUREMENTS.AREA_PIXELS IS 'Área calculada em pixels';
COMMENT ON COLUMN TB_MEASUREMENTS.AREA_MICROMETERS IS 'Área calculada em micrômetros quadrados';
COMMENT ON COLUMN TB_MEASUREMENTS.SCALE_PIXELS_PER_UM IS 'Escala de conversão utilizada';
COMMENT ON COLUMN TB_MEASUREMENTS.DATA_MEDICAO IS 'Data e hora da medição';
COMMENT ON COLUMN TB_MEASUREMENTS.METODO_PROCESSAMENTO IS 'Método de processamento utilizado';
COMMENT ON COLUMN TB_MEASUREMENTS.PARAMETROS_PROCESSAMENTO IS 'Parâmetros de processamento (JSON)';
COMMENT ON COLUMN TB_MEASUREMENTS.VALIDADA IS 'Indica se a medição foi validada (S/N)';

-- =============================================================================
-- CRIAÇÃO DE ÍNDICES PARA PERFORMANCE
-- =============================================================================

-- Índices para TB_OPERATORS
CREATE INDEX IDX_OPERATORS_EMAIL ON TB_OPERATORS(EMAIL);
CREATE INDEX IDX_OPERATORS_NIVEL_ACESSO ON TB_OPERATORS(NIVEL_ACESSO);
CREATE INDEX IDX_OPERATORS_ATIVO ON TB_OPERATORS(ATIVO);

-- Índices para TB_DIGITAL_MICROSCOPES
CREATE INDEX IDX_MICROSCOPES_STATUS ON TB_DIGITAL_MICROSCOPES(STATUS);
CREATE INDEX IDX_MICROSCOPES_FABRICANTE ON TB_DIGITAL_MICROSCOPES(FABRICANTE);

-- Índices para TB_SAMPLES
CREATE INDEX IDX_SAMPLES_TIPO ON TB_SAMPLES(TIPO);
CREATE INDEX IDX_SAMPLES_DATA_COLETA ON TB_SAMPLES(DATA_COLETA);
CREATE INDEX IDX_SAMPLES_STATUS ON TB_SAMPLES(STATUS);
CREATE INDEX IDX_SAMPLES_OPERADOR_RESP ON TB_SAMPLES(OPERADOR_RESPONSAVEL);

-- Índices para TB_MICROSCOPY_IMAGES
CREATE INDEX IDX_IMAGES_DATA_CAPTURA ON TB_MICROSCOPY_IMAGES(DATA_CAPTURA);
CREATE INDEX IDX_IMAGES_FORMATO ON TB_MICROSCOPY_IMAGES(FORMATO);

-- Índices para TB_MEASUREMENTS
CREATE INDEX IDX_MEASUREMENTS_DATA_MEDICAO ON TB_MEASUREMENTS(DATA_MEDICAO);
CREATE INDEX IDX_MEASUREMENTS_VALIDADA ON TB_MEASUREMENTS(VALIDADA);
CREATE INDEX IDX_MEASUREMENTS_AREA_UM ON TB_MEASUREMENTS(AREA_MICROMETERS);

-- =============================================================================
-- GRANTS E PRIVILÉGIOS
-- =============================================================================

-- Conceder privilégios nas sequences
GRANT SELECT ON SQ_OPERATORS TO PUBLIC;
GRANT SELECT ON SQ_DIGITAL_MICROSCOPES TO PUBLIC;
GRANT SELECT ON SQ_SAMPLES TO PUBLIC;
GRANT SELECT ON SQ_MICROSCOPY_IMAGES TO PUBLIC;
GRANT SELECT ON SQ_MEASUREMENTS TO PUBLIC;

-- =============================================================================
-- MENSAGEM DE SUCESSO
-- =============================================================================

SELECT 'Schema do Sistema de Micromedição criado com sucesso!' as STATUS FROM DUAL;
SELECT 'Tabelas criadas: ' || COUNT(*) as TABELAS_CRIADAS
FROM USER_TABLES
WHERE TABLE_NAME IN ('TB_OPERATORS', 'TB_DIGITAL_MICROSCOPES', 'TB_SAMPLES', 'TB_MICROSCOPY_IMAGES', 'TB_MEASUREMENTS');

SELECT 'Sequences criadas: ' || COUNT(*) as SEQUENCES_CRIADAS
FROM USER_SEQUENCES
WHERE SEQUENCE_NAME IN ('SQ_OPERATORS', 'SQ_DIGITAL_MICROSCOPES', 'SQ_SAMPLES', 'SQ_MICROSCOPY_IMAGES', 'SQ_MEASUREMENTS');